package test;

public class LinkedList {

//	public int value;
//	public LinkedList next;
	
//	public Object Node(int value) {
//		this.value= value;
//		 next=null;
//		 return this;
//		
//	}
//	public Object tail;
//	public int length;
//	public LinkedList() {
//		
//	}
//	
//	public LinkedList(int value) {
//		this.value= value;
//		 next=null;
//
//		
//	}; 
//	
	
	
	private Node headNode;
	private int value;
	private Node tail;
	private int length;
	 
	// data carried by this LinkedList. could be of any type you need.
	
	public LinkedList() {
		
	}
	
	 
	// LinkedList constructor
	public LinkedList(int value) {
		
	 
	 
	this.tail = this.headNode;
	this.length = 1;
	 
	//System.out.println(Node.toString());
	

	}
 
	//this will append any incoming node at the end
	public   LinkedList append(int value) {
		
		Node  newLinkedList = new Node(value);
		 
		
		//newLinkedList.prev= this.tail;
		//System.out.println("<<<<<"+newLinkedList.prev);
		 this.tail.next =newLinkedList;
		 
		 this.tail=newLinkedList;
		
	
		
		this.length++;
		System.out.println(headNode);
		return this;
	}
	//this will set the incoming node to be the head
	public void prepend(int value) {
		
		 Node newNode = new Node(value);
		 Node currentHeadNode = this.headNode;
	//	 this.headNode.prev = newNode;
	//	 this.prevNode =newNode;
		 this.headNode=newNode;
		 newNode.next= currentHeadNode;
		 this.length++;
 		
	}
	
	
	public void insert(int index, int value) {
		if(  index>= this.length) {
			append(value);
			}
		
		Node incomingNode = new Node(value);
		
		Node leaderNode =transversingNode(index-1);
		Node holdingNode= leaderNode.next;
		
		
		
		incomingNode.next=holdingNode;
		leaderNode.next= incomingNode;
		//incomingNode.prev= leaderNode;
		 //holdingNode.prev = incomingNode;
		
		this.length++;
	}

	
	public Node transversingNode(int index) {
		int counter =0;
		Node leaderNode = this.headNode;
		while(index!=counter) {
		
			leaderNode =leaderNode.next;
			counter++;
		}
		
		return leaderNode;
	}
	public String toString(int a) {
		
		System.out.println(headNode);
		
		//System.out.println(" LinkedList \n {\n Head: " + headNode + ", \n tail=" + tail + ", \n length=" + length + "\n}");

		String b="";
 		int countTransverseThrougHead=0;
// 	while(length-countTransverseThrougHead != a) {
// 			
// 		this.headNode=headNode.next;
// 		b+=headNode;
// 			countTransverseThrougHead++;
//  		}
//		 
 	 return "";
		//return " LinkedList \n {\n Head: " + headNode + ", \n tail=" + tail + ", \n length=" + length + "\n}";
	}
	
	 
	
	
	
	 

}


	
 

