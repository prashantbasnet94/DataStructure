
public class Tree {
	protected  Node root;
	protected  int length;
	
	public Tree(int value) {
		System.out.println("rootNode");
		this.root = new Node(value);
		System.out.println(this.root.value);
	}
	
	
	public void insert(int value) {
		Node currentNode = this.root;
		this.length++;
 
		if(isDuplicate(value)) {
			while(true) {
				if(value<currentNode.value) {
					if(currentNode.left==null) {
						currentNode.left=new Node(value);
						break;
					}
					currentNode= currentNode.left;
				}else if(value>currentNode.value) {
					if(currentNode.right==null) {
						currentNode.right =new Node(value);
						break;
					}
					currentNode=currentNode.right;
				}
				
				
			}
		}
		
		
	}
	
	int[] store= new int[]
	public static void traverseInOrder(Node node,int[] list) {
		if(node.left!=null) {
			traverseInOrder(node,list);
		}
		list.push(node.value);
		if(node.right!=null) {
			traverseInOrder(node,list);
		}
	}

	private boolean  isDuplicate(int value) {
		// TODO Auto-generated method stub
		return true;
	}


	@Override
	public String toString() {
		return "Tree [root=" + root + "]";
	}
	
	
	
	
	
}
